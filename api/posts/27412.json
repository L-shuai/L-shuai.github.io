{"title":"python 爬取《三国演义》小说 & 统计词频 & 生成词云图","slug":"python爬取《三国演义》小说&统计词频&生成词云图","date":"2020-10-04","updated":"2020-10-04","comments":true,"path":"api/posts/27412.json","excerpt":null,"cover":"https://i.postimg.cc/V6jn6qjq/image.png","covers":["https://i.postimg.cc/V6jn6qjq/image.png","https://i.postimg.cc/wjytM5z1/image.png","https://i.postimg.cc/QNfVqYxB/image.png","https://i.postimg.cc/sghXsVPS/image.png"],"content":"<h2 id=\"python 爬取《三国演义》小说 -amp- 统计词频 -amp- 生成词云图\"><a href=\"#python 爬取《三国演义》小说 -amp- 统计词频 -amp- 生成词云图\" class=\"headerlink\" title=\"python 爬取《三国演义》小说 &amp; 统计词频 &amp; 生成词云图\"></a>python 爬取《三国演义》小说 &amp; 统计词频 &amp; 生成词云图 </h2><h3 id=\"注意点：\"><a href=\"# 注意点：\" class=\"headerlink\" title=\"注意点：\"></a> 注意点：</h3><ol>\n<li>爬取小说正文时用的正则表达式涉及到多行匹配。需要开启多行模式 *(?s)*<br><code> book_content_re = re.compile(r&#39;(?s)&lt;div.*?id=&quot;htmlContent&quot;&gt;(.*?)&lt;/div&gt;&#39;)</code></li>\n</ol>\n<p><a href=\"https://postimg.cc/N9j5CrCF\"><img src=\"https://i.postimg.cc/V6jn6qjq/image.png\" alt=\"image.png\"></a></p>\n<p><a href=\"https://postimg.cc/TKx2HDpx\"><img src=\"https://i.postimg.cc/wjytM5z1/image.png\" alt=\"image.png\"></a></p>\n<p><a href=\"https://postimg.cc/nMQHFkmZ\"><img src=\"https://i.postimg.cc/QNfVqYxB/image.png\" alt=\"image.png\"></a></p>\n<p><a href=\"https://postimg.cc/ts9yzGMC\"><img src=\"https://i.postimg.cc/sghXsVPS/image.png\" alt=\"image.png\"></a></p>\n<h3 id=\"源代码练习\"><a href=\"# 源代码练习\" class=\"headerlink\" title=\"源代码练习\"></a>源代码练习 </h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> jieba</span><br><span class=\"line\"><span class=\"keyword\">import</span> jieba.analyse</span><br><span class=\"line\"><span class=\"keyword\">import</span> codecs</span><br><span class=\"line\"><span class=\"keyword\">from</span> collections <span class=\"keyword\">import</span> Counter</span><br><span class=\"line\"><span class=\"keyword\">import</span> wordcloud</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 要爬取的网址 url</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://www.janpn.com/book/sanguoyanyi2.html&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_content</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 先获取二进制数据，再进行编码</span></span><br><span class=\"line\"></span><br><span class=\"line\">    txt = requests.get(url).content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(txt)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    book_title = re.compile(<span class=\"string\">r&#x27;&lt;h3 class=&quot;bookTitle&quot;&gt;(.+)&lt;/h3&gt;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># m1.findall(txt) 得到的是一个数组，取 m1.findall(txt)[0]</span></span><br><span class=\"line\">    <span class=\"comment\"># print(m1.findall(txt))</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># book_chapters_re = re.compile(r&#x27;&lt;li&gt;&lt;a href=&quot;(.+\\.html)&quot;&gt;([第 | 回].+)&lt;/a&gt;&lt;/li&gt;&#x27;)</span></span><br><span class=\"line\">    <span class=\"comment\"># book_chapters_re = re.compile(r&#x27;&lt;ul class=&quot;panel-body panel-chapterlist&quot;&gt;&lt;li&gt;&lt;a href=&quot;(.+)&quot;&gt;(.*)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&#x27;)</span></span><br><span class=\"line\">    <span class=\"comment\"># 一定要注意   要使用非贪婪模式  来匹配特定结尾.html</span></span><br><span class=\"line\">    book_chapters_re = re.compile(<span class=\"string\">r&#x27;&lt;li&gt;&lt;a href=&quot;(.*?\\.html)&quot;.*?&gt;(.+?)&lt;/a&gt;&lt;/li&gt;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    book_chapters = book_chapters_re.findall(txt)</span><br><span class=\"line\">    <span class=\"comment\"># 开启多行模式  正文是很多段落的</span></span><br><span class=\"line\">    book_content_re = re.compile(<span class=\"string\">r&#x27;(?s)&lt;div.*?id=&quot;htmlContent&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 过滤正文的 \\r\\n</span></span><br><span class=\"line\">    m3 = re.compile(<span class=\"string\">r&#x27;\\r\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 过滤正文的 &amp;nbsp;</span></span><br><span class=\"line\">    m4 = re.compile(<span class=\"string\">r&#x27;&amp;nbsp;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 过滤正文的 &lt;br /&gt;</span></span><br><span class=\"line\">    m5 = re.compile(<span class=\"string\">r&#x27;&lt;br /&gt;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(book_chapters)</span><br><span class=\"line\">    <span class=\"comment\"># print(book_chapters)</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">&#x27; 三国演义.txt&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> book_chapters:</span><br><span class=\"line\">            print([i[<span class=\"number\">0</span>],i[<span class=\"number\">1</span>]])</span><br><span class=\"line\">        <span class=\"comment\"># print(book_chapters)</span></span><br><span class=\"line\">            print(i[<span class=\"number\">0</span>])</span><br><span class=\"line\">            i_url = i[<span class=\"number\">0</span>]</span><br><span class=\"line\">            print(<span class=\"string\">&quot; 正在下载 ---&gt;%s&quot;</span> % i[<span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"comment\"># 根据每个章节的 url，先获取二进制，再编码</span></span><br><span class=\"line\">            content_html = requests.get(i_url).content.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">#             匹配正文</span></span><br><span class=\"line\">            content = book_content_re.findall(content_html)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            print(content)</span><br><span class=\"line\">            content = m3.sub(<span class=\"string\">&#x27;&#x27;</span>,content)</span><br><span class=\"line\">            content = m4.sub(<span class=\"string\">&#x27;&#x27;</span>,content)</span><br><span class=\"line\">            content = m5.sub(<span class=\"string\">&#x27;&#x27;</span>,content)</span><br><span class=\"line\">            print(content)</span><br><span class=\"line\">            f.write(<span class=\"string\">&#x27;\\n&#x27;</span>+i[<span class=\"number\">1</span>]+<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">            f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># =================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建停用词列表</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">stopwordlist</span>():</span></span><br><span class=\"line\">    stopwords = [line.strip() <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> open(<span class=\"string\">&#x27;../ 结巴分词 /hit_stopwords.txt&#x27;</span>,encoding=<span class=\"string\">&#x27;UTF-8&#x27;</span>).readline()]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stopwords</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对句子进行中文分词 并 去停用词</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">seg_depart</span>(<span class=\"params\">sentence</span>):</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27; 正在分词 &#x27;</span>)</span><br><span class=\"line\">    sentence_depart = jieba.cut(sentence.strip())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     创建一个停用词列表</span></span><br><span class=\"line\">    stopwords = stopwordlist()</span><br><span class=\"line\"><span class=\"comment\">#     输出结果为 outstr</span></span><br><span class=\"line\">    outstr = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     去停用词</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> sentence_depart:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> word <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> stopwords:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> word != <span class=\"string\">&#x27;\\t&#x27;</span>:</span><br><span class=\"line\">                outstr += word</span><br><span class=\"line\">                outstr += <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> outstr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取文件并生成词云图</span></span><br><span class=\"line\">filepath = <span class=\"string\">&#x27; 三国演义.txt&#x27;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_word_cloud</span>(<span class=\"params\">filepath</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 读取文件内容</span></span><br><span class=\"line\">    content = codecs.open(filepath,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;gbk&#x27;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     去停用词</span></span><br><span class=\"line\">    content = seg_depart(content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     结巴分词</span></span><br><span class=\"line\">    wordlist = jieba.cut(content)</span><br><span class=\"line\">    wl = <span class=\"string\">&#x27; &#x27;</span>.join(wordlist)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(wl)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     配置词云图</span></span><br><span class=\"line\">    wc = wordcloud.WordCloud(</span><br><span class=\"line\">    <span class=\"comment\">#     这只背景颜色</span></span><br><span class=\"line\">        background_color=<span class=\"string\">&#x27;white&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">#     设置最大显示的词数</span></span><br><span class=\"line\">        max_words=<span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"comment\">#     设置字体路径</span></span><br><span class=\"line\">        font_path = <span class=\"string\">&#x27;C:\\Windows\\Fonts\\msyh.ttc&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">        height=<span class=\"number\">1200</span>,</span><br><span class=\"line\">        width=<span class=\"number\">1600</span>,</span><br><span class=\"line\">    <span class=\"comment\">#     设置字体最大值</span></span><br><span class=\"line\">        max_font_size=<span class=\"number\">300</span>,</span><br><span class=\"line\">    <span class=\"comment\">#     设置有多少种随机配色方案</span></span><br><span class=\"line\">        random_state=<span class=\"number\">50</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     生成词云图</span></span><br><span class=\"line\">    myword = wc.generate(wl)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     展示词云图</span></span><br><span class=\"line\">    plt.imshow(myword)</span><br><span class=\"line\">    plt.axis(<span class=\"string\">&#x27;off&#x27;</span>)</span><br><span class=\"line\">    plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># =================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开启爬虫</span></span><br><span class=\"line\"><span class=\"comment\"># get_content(url)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成词云图</span></span><br><span class=\"line\">create_word_cloud(filepath)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ===================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取文件  词频统计</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">count_from_file</span>(<span class=\"params\">filepath,top_limit=<span class=\"number\">0</span></span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> codecs.open(filepath,<span class=\"string\">&#x27;r&#x27;</span>,<span class=\"string\">&#x27;gbk&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        content = f.read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#         将多个空格替换为一个空格</span></span><br><span class=\"line\">        content = re.sub(<span class=\"string\">r&#x27;\\s+&#x27;</span>,<span class=\"string\">r&#x27; &#x27;</span>,content)</span><br><span class=\"line\">        content = re.sub(<span class=\"string\">r&#x27;\\.+&#x27;</span>,<span class=\"string\">r&#x27; &#x27;</span>,content)</span><br><span class=\"line\"><span class=\"comment\">#         去停用词</span></span><br><span class=\"line\">        content = seg_depart(content)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> count_from_str(content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">count_from_str</span>(<span class=\"params\">content,top_limit=<span class=\"number\">0</span></span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> top_limit&lt;=<span class=\"number\">0</span>:</span><br><span class=\"line\">        top_limit=<span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#         提取文章的关键词</span></span><br><span class=\"line\">    tags = jieba.analyse.extract_tags(content,topK=<span class=\"number\">100</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot; 关键词：&quot;</span>)</span><br><span class=\"line\">    print(tags)</span><br><span class=\"line\"></span><br><span class=\"line\">    words = jieba.cut(content)</span><br><span class=\"line\"></span><br><span class=\"line\">    counter = Counter()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> words:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> word <span class=\"keyword\">in</span> tags:</span><br><span class=\"line\">            counter[word]+=<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>  counter.most_common(top_limit)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># =====================================</span></span><br><span class=\"line\">print(<span class=\"string\">&quot; 打印词频统计 &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印词频统计</span></span><br><span class=\"line\">result = count_from_file(filepath)</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 开启多行匹配模式  因为如果涉及到换行符   就要用多行</span></span><br><span class=\"line\">    book_content_re = re.compile(<span class=\"string\">r&#x27;(?s)&lt;div.*?id=&quot;htmlContent&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>)</span><br><span class=\"line\">    content_html = requests.get(url).content.decode(<span class=\"string\">&#x27;gbk&#x27;</span>)</span><br><span class=\"line\">    print(content_html)</span><br><span class=\"line\">    content = book_content_re.findall(content_html)</span><br><span class=\"line\">    print(content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># test(&quot;http://www.janpn.com/book/171/171182/35225767.html&quot;)</span></span><br></pre></td></tr></table></figure>","url":"/posts/27412/","min2read":4,"word4post":961,"prev_post":null,"next_post":{"title":"Python 中文分词及词频统计","url":"/posts/34275/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"python 爬取《三国演义》小说 -amp- 统计词频 -amp- 生成词云图\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">python 爬取《三国演义》小说 &amp; 统计词频 &amp; 生成词云图 </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"注意点：\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\"> 注意点：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"源代码练习\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">源代码练习 </span></a></li></ol></li></ol>","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"词云图","path":"api/categories/词云图.json","url":"/categories/词云图/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"爬虫","path":"api/tags/爬虫.json","url":"/tags/爬虫/"},{"name":"词云图","path":"api/tags/词云图.json","url":"/tags/词云图/"},{"name":"词频统计","path":"api/tags/词频统计.json","url":"/tags/词频统计/"}]}
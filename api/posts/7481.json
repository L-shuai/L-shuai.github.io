{"title":"python 爬取网站的小说 2","slug":"python爬取网站的小说2","date":"2020-10-03","updated":"2020-10-03","comments":true,"path":"api/posts/7481.json","excerpt":null,"cover":"https://s1.ax1x.com/2020/10/03/03qR9s.png","covers":["https://s1.ax1x.com/2020/10/03/03qR9s.png","https://s1.ax1x.com/2020/10/03/03qfcq.png","https://s1.ax1x.com/2020/10/03/03qIBT.png"],"content":"<h2 id=\"使用正则表达式\"><a href=\"# 使用正则表达式\" class=\"headerlink\" title=\"使用正则表达式\"></a>使用正则表达式</h2><h3 id=\"re-compile- 函数\"><a href=\"#re-compile- 函数\" class=\"headerlink\" title=\"re.compile 函数\"></a>re.compile 函数</h3><p>compile 函数用于编译正则表达式，生成一个正则表达式（ Pattern ）对象，供 match() 和 search() 这两个函数使用。</p>\n<p>语法格式为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">re.compile(pattern[, flags])</span><br></pre></td></tr></table></figure>\n\n<p>参数：</p>\n<ul>\n<li><strong>pattern</strong> : 一个字符串形式的正则表达式</li>\n<li><strong>flags</strong> : 可选，表示匹配模式，比如忽略大小写，多行模式等，具体参数为：<ol>\n<li><strong>re.I</strong> 忽略大小写</li>\n<li><strong>re.L</strong> 表示特殊字符集 \\w, \\W, \\b, \\B, \\s, \\S 依赖于当前环境</li>\n<li><strong>re.M</strong> 多行模式</li>\n<li><strong>re.S</strong> 即为 <strong>.</strong> 并且包括换行符在内的任意字符（**.** 不包括换行符）</li>\n<li><strong>re.U</strong> 表示特殊字符集 \\w, \\W, \\b, \\B, \\d, \\D, \\s, \\S 依赖于 Unicode 字符属性数据库</li>\n<li><strong>re.X</strong> 为了增加可读性，忽略空格和 <strong>#</strong> 后面的注释</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"findall\"><a href=\"#findall\" class=\"headerlink\" title=\"findall\"></a>findall</h3><p>在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表。</p>\n<p><strong>注意：</strong> match 和 search 是匹配一次 findall 匹配所有。</p>\n<p>语法格式为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">findall(string[, pos[, endpos]])</span><br></pre></td></tr></table></figure>\n\n<p>参数：</p>\n<ul>\n<li><strong>string</strong> : 待匹配的字符串。</li>\n<li><strong>pos</strong> : 可选参数，指定字符串的起始位置，默认为 0。</li>\n<li><strong>endpos</strong> : 可选参数，指定字符串的结束位置，默认为字符串的长度。</li>\n</ul>\n<h2 id=\"python 爬虫之小说网站–下载小说 - 正则表达式\"><a href=\"#python 爬虫之小说网站–下载小说 - 正则表达式\" class=\"headerlink\" title=\"python 爬虫之小说网站–下载小说 (正则表达式)\"></a>python 爬虫之小说网站–下载小说(正则表达式)</h2><h3 id=\"思路\"><a href=\"# 思路\" class=\"headerlink\" title=\"思路:\"></a> 思路:</h3><ol>\n<li>找到要下载的小说首页, 打开网页源代码进行分析(例:<a href=\"https://www.kanunu8.com/files/old/2011/2447.html\">https://www.kanunu8.com/files/old/2011/2447.html</a>)</li>\n<li>分析自己要得到的内容, 首先分析 url, 发现只有后面的是变化的，先获得小说的没有相对路径，然后组合成新的 url(每章小说的 url)</li>\n<li>获得每章小说的内容，进行美化处理</li>\n</ol>\n<h3 id=\"相关截图\"><a href=\"# 相关截图\" class=\"headerlink\" title=\"相关截图\"></a>相关截图</h3><p><img src=\"https://s1.ax1x.com/2020/10/03/03qR9s.png\" alt=\"03qR9s.png\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/03/03qfcq.png\" alt=\"03qfcq.png\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/03/03qIBT.png\" alt=\"03qIBT.png\"></p>\n<h3 id=\"源代码\"><a href=\"# 源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码 </h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 要爬取的网站</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;https://www.kanunu8.com/book4/10509/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 先获取二进制，再进行解码</span></span><br><span class=\"line\">txt = requests.get(url).content.decode(<span class=\"string\">&#x27;gbk&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># txt.conten 是二进制形式的   ---n&lt;head&gt;\\r\\n&lt;title&gt;\\xd6\\xd0\\xb9\\xfa\\xba\\xcf\\xbb\\xef\\xc8\\xcb</span></span><br><span class=\"line\"><span class=\"comment\"># print(txt)</span></span><br><span class=\"line\"></span><br><span class=\"line\">m1 = re.compile(<span class=\"string\">r&#x27;&lt;td colspan=&quot;4&quot; align=&quot;center&quot;&gt;&lt;strong&gt;(.+)&lt;/strong&gt;&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># print(m1.findall(txt))</span></span><br><span class=\"line\"></span><br><span class=\"line\">m2 = re.compile(<span class=\"string\">r&#x27;&lt;td(width=&quot;25%&quot;)?&gt;&lt;a href=&quot;(.+\\.html)&quot;&gt;(.+)&lt;/a&gt;&lt;/td&gt;&#x27;</span>)</span><br><span class=\"line\">print(m2.findall(txt))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获得小说的目录以及对应的每个章节的相对路径</span></span><br><span class=\"line\">raw = m2.findall(txt)</span><br><span class=\"line\"></span><br><span class=\"line\">sanguo = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> raw:</span><br><span class=\"line\">    print([i[<span class=\"number\">2</span>],url+i[<span class=\"number\">1</span>]])</span><br><span class=\"line\">    <span class=\"comment\"># [&#x27; 第五章 成功之母 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184616.html&#x27;]</span></span><br><span class=\"line\">    <span class=\"comment\"># 生成每个章节对应的 url</span></span><br><span class=\"line\">    sanguo.append([i[<span class=\"number\">2</span>],url+i[<span class=\"number\">1</span>]])</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">&quot;*&quot;</span>*<span class=\"number\">100</span>)</span><br><span class=\"line\">print(sanguo)</span><br><span class=\"line\"><span class=\"comment\"># [[&#x27; 第一章 梦的起源 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184612.html&#x27;], [&#x27; 第二章 偶像兄弟 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184613.html&#x27;], [&#x27; 第三章 恋爱必修 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184614.html&#x27;], [&#x27; 第四章 爱的代价 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184615.html&#x27;], [&#x27; 第五章 成功之母 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184616.html&#x27;], [&#x27; 第六章 命运转折 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184617.html&#x27;], [&#x27; 第七章 被迫下海 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184618.html&#x27;], [&#x27; 第八章 渐行渐远 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184619.html&#x27;], [&#x27; 第九章 三箭合一 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184620.html&#x27;], [&#x27; 第十章 梦想起航 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184621.html&#x27;], [&#x27; 第十一章 领航梦想 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184622.html&#x27;], [&#x27; 第十二章 平地波澜 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184623.html&#x27;], [&#x27; 第十三章 新的招牌 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184624.html&#x27;], [&#x27; 第十四章 神的弱点 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184625.html&#x27;], [&#x27; 第十五章 裂隙初现 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184626.html&#x27;], [&#x27; 第十六章 上市之争 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184627.html&#x27;], [&#x27; 第十七章 梦想巅峰 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184628.html&#x27;], [&#x27; 第十八章 乾纲独断 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184629.html&#x27;], [&#x27; 第十九章 一剑穿心 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184630.html&#x27;], [&#x27; 第二十章 渡尽劫波 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184631.html&#x27;], [&#x27; 尾 \\u3000 声 &#x27;, &#x27;https://www.kanunu8.com/book4/10509/184632.html&#x27;]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 匹配每章节的正文内容</span></span><br><span class=\"line\"><span class=\"comment\"># 每章小说的正文在 &lt;p&gt; 标签中</span></span><br><span class=\"line\">m3 = re.compile(<span class=\"string\">r&#x27;&lt;p&gt;(.+)&lt;/p&gt;&#x27;</span>,re.S)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 小说中的 &lt;br /&gt; 要被替换为空白</span></span><br><span class=\"line\">m4 = re.compile(<span class=\"string\">r&#x27;&lt;br /&gt;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &amp;nbsp; 也要被替换</span></span><br><span class=\"line\">m5 = re.compile(<span class=\"string\">r&#x27;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建一个 txt 中国合伙人 1.txt</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">&#x27; 中国合伙人 1.txt&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> sanguo:</span><br><span class=\"line\">        <span class=\"comment\"># i[1] 是章节的 url</span></span><br><span class=\"line\">        i_url = i[<span class=\"number\">1</span>]</span><br><span class=\"line\">        print(<span class=\"string\">&quot; 正在下载 ---&gt;%s&quot;</span> % i[<span class=\"number\">0</span>])</span><br><span class=\"line\">        <span class=\"comment\"># 根据每个章节的 url，先获取正文页面的二进制，再编码</span></span><br><span class=\"line\">        r_nr = requests.get(i_url).content.decode(<span class=\"string\">&#x27;gbk&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 匹配正文  ：带有 &lt;p&gt; 的</span></span><br><span class=\"line\">        n_nr = m3.findall(r_nr)</span><br><span class=\"line\">        print(n_nr)</span><br><span class=\"line\">        <span class=\"comment\"># 把 &lt;br/&gt; 替换为空  sub() 和 replace()区别：sub()可以用正则 </span></span><br><span class=\"line\">        n = m4.sub(<span class=\"string\">&#x27;&#x27;</span>,n_nr[<span class=\"number\">0</span>])</span><br><span class=\"line\">        <span class=\"comment\"># 把 &amp;nbsp; 也替换为空</span></span><br><span class=\"line\">        n2 = m5.sub(<span class=\"string\">&#x27;&#x27;</span>,n)</span><br><span class=\"line\">        n2 = n2.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 写入 txt</span></span><br><span class=\"line\">        <span class=\"comment\"># i[0] 是章节名字</span></span><br><span class=\"line\">        f.write(<span class=\"string\">&#x27;\\n&#x27;</span>+i[<span class=\"number\">0</span>]+<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">        f.write(n2)</span><br></pre></td></tr></table></figure>","url":"/posts/7481/","min2read":6,"word4post":"1.3k","prev_post":{"title":"有道翻译反爬虫机制","url":"/posts/52867/"},"next_post":{"title":"读取 txt 文件并生成词云图","url":"/posts/64463/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"使用正则表达式\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">使用正则表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"re-compile- 函数\" href = \"#\"><span class=\"toc-number\">1.1.</span> <span class=\"toc-text\">re.compile 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"findall\" href = \"#\"><span class=\"toc-number\">1.2.</span> <span class=\"toc-text\">findall</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"python 爬虫之小说网站–下载小说 - 正则表达式\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">python 爬虫之小说网站–下载小说(正则表达式)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"思路\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\"> 思路:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"相关截图\" href = \"#\"><span class=\"toc-number\">2.2.</span> <span class=\"toc-text\">相关截图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" data-id=\"源代码\" href = \"#\"><span class=\"toc-number\">2.3.</span> <span class=\"toc-text\">源代码 </span></a></li></ol></li></ol>","categories":[{"name":"python","path":"api/categories/python.json","url":"/categories/python/"},{"name":"爬虫","path":"api/categories/爬虫.json","url":"/categories/爬虫/"}],"tags":[{"name":"python","path":"api/tags/python.json","url":"/tags/python/"},{"name":"小说","path":"api/tags/小说.json","url":"/tags/小说/"}]}